<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>默认分类 on 技术博客</title>
    <link>http://localhost:1313/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/</link>
    <description>Recent content in 默认分类 on 技术博客</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 14 Aug 2025 07:00:32 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Javascript学习笔记</title>
      <link>http://localhost:1313/posts/2025/javascript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 14 Aug 2025 07:00:32 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025/javascript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h3 id=&#34;javascript学习笔记&#34;&gt;javaScript学习笔记&lt;/h3&gt;&#xA;&lt;p&gt;变量&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;We&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;say&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;variables&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contain&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;This&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;important&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;distinction&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Variables&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aren&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;t the values themselves; they are containers for values. You can think of them being like little cardboard boxes that you can store things in.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;变量的名称就是一段内存地址的名称，变量的值就是这段内存地址保存的内容。就好像一个盒子和盒子里面装的东西。&lt;/p&gt;</description>
    </item>
    <item>
      <title>汽车知识</title>
      <link>http://localhost:1313/posts/2025/%E6%B1%BD%E8%BD%A6%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Thu, 07 Aug 2025 13:48:59 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025/%E6%B1%BD%E8%BD%A6%E7%9F%A5%E8%AF%86/</guid>
      <description>&lt;p&gt;忽然想起来对汽车的系统集成有了个想法，写下来对汽车整体认识&lt;/p&gt;&#xA;&lt;h3 id=&#34;汽车包含的几个子系统&#34;&gt;汽车包含的几个子系统&lt;/h3&gt;&#xA;&lt;p&gt;​    1、油路系统&#xA;​    2、电路系统&#xA;3、气路系统&#xA;4、润滑系统&#xA;5、冷却系统&#xA;6、动力传动系统&#xA;7、制动系统&#xA;8、悬挂系统&#xA;9、空调系统&#xA;10、转向系统&#xA;​    &amp;hellip;&#xA;所有这些系统都是在ECU的组织下，互相协同工作，通过油、电、气三个子系统的的相互配合完成能量转换，从汽油燃烧产生的能量通过活塞、曲轴、飞轮等部件转换为机械能，并通过变速箱、传动轴、差速器等部件实现轮胎的转动，驱动车辆行驶。然发动机转起来需要最基础的油、气、电三套基础系统，为了让发动机运行的更加平稳可持续，必须有润滑系统、冷却系统。只要发动机可以良好的运行，就有了源源不断的能量可以输出，此时就可以通过变速箱、差速器、传动轴把机械能传递给轮胎，驱动车辆行驶。这是我对汽车运行的基本原理的的理解。&lt;/p&gt;&#xA;&lt;h3 id=&#34;发动机运行的简单描述&#34;&gt;发动机运行的简单描述&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt; 以自然吸气发动机为例子，说明空气运行路径。空气从空气滤清器过滤，经过节气门和进气歧管，再通过气缸上打开的进气门进入到气缸内，在气缸内被压缩，然后配合喷油点火，油气混合燃烧产生的气流能量推动活塞运行，带动曲轴转动，曲轴带动飞轮转动，飞轮上的多个皮带带动特定的部件运动，比如发电机等。而变速箱和发动机的连接，使得发动机的动力通过变速箱、差速器、半轴、传动轴传递到轮胎，最终驱动车辆行驶。以常见的四冲程汽油发动机为例，一般是进气、压缩、做功、排气四个过程。&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;涡轮增压发动机气流路径&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&#xA;外界空气 → 空气滤清器 → 压气机（增压）→ 中冷器 → 节气门 → 进气歧管 → [气缸]（通过进气门进入）&lt;/p&gt;&#xA;&lt;p&gt;[气缸]（燃烧后）→ 排气门 → 排气歧管 → 涡轮（废气驱动）→ 三元催化器 → 消音器 → 尾管排出&lt;/p&gt;&#xA;&lt;h2 id=&#34;其中的压气机和涡轮是同轴联动的&#34;&gt;其中的压气机和涡轮是同轴联动的&lt;/h2&gt;&#xA;&lt;h3 id=&#34;子系统的协同工作&#34;&gt;子系统的协同工作&lt;/h3&gt;&#xA;&lt;p&gt;汽车上有很多可以独立运行有互相链接的ecu，通过特定的协议实现通讯，借助传感器传递信号。&#xA;1、互相有依赖的子系统&#xA;最基础的油路、气路、电路系统紧密合作才能让发动机运行起来，还有辅助的发动机润滑系统和冷却系统都是要个发动机的ecu互相通讯的，通讯方式应该是基于规定的协议，传递传感器的信号。&#xA;2、没有紧密联系的子系统&#xA;比如电子娱乐系统和发动机的润滑系统应该是没有关系的，转向系统和空调系统应该也是独立的，彼此独立的系统不需要ecu之间的通讯。&lt;/p&gt;&#xA;&lt;p&gt;三、对ecu的理解&lt;/p&gt;&#xA;&lt;p&gt;Electronic   control  unit  （ECU）是一组嵌入式的车用计算机系统，使用的实时操作系统，把各类传感器作为输入设备，把各种执行器作为输出设备（喷油嘴、点火线圈、进气门开合等设备），通过各种存储器来保存车机系统的参数。对于燃油车来说，打比方就是一个燃油的可行驶的计算机。输入设备就是把各类信息编组为数字信号，通过传感器传输给ECU,由ECU来决定如何操作各类设备，比如加大喷油量、点火等动作。&lt;/p&gt;&#xA;&lt;h3 id=&#34;hevphevreevbev&#34;&gt;Hev、Phev、Reev、Bev&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;  1、 Hev：Hybrid   electric  vehicle      轻混&#xA;         仅仅有小容量的电池驱动电机，电机主要的应用场景式是市区走走停停的起步，或者在超车时的提速。无法实现长距离的电机驱动模式。纯粹的燃油模式，电机用来在市区优化行驶感受，市区内省油，高速行驶时加速动力好。&#xA;  2、Phev：plug  hybrid   electric     vehicle   插电混动    &#xA;        配置有大容量的电池，可以插电充电，电池可驱动150公里左右，电机驱动模式主要适用在市区内，实现市区内零燃油；长途行驶适用燃油模式，模式切换自动化完成，无需手动切换。适合有专门充电设备的环境。但是后期更换电池费用较多。&#xA;  3、Reev：Range-Extended  electric   vehicle     增程式汽车&#xA;        配备有内燃机和发电机两种系统，然后发动机只负责发电，不参与驱动,实际上是电车带了一个燃油的发电机。&#xA;  4、Bev ：Battery   electric   vehicle     纯电车&#xA;        a、目前主流是液态电池或者半固态电池&#xA;        b、固态电池。目前是研究的主要方向。&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;​   &lt;br&gt;&#xA;​&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo建立博客系统</title>
      <link>http://localhost:1313/posts/2025/hugo%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E6%8C%87%E5%8D%97/</link>
      <pubDate>Wed, 30 Jul 2025 17:50:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025/hugo%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;p&gt;这篇文档主要记录使用Hugo建立博客系统的详细步骤，主要内容包含下面6个主题&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1、使用Hugo轻松建立个人博客站点&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2、博客站点目录详细介绍&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3、博客站点的内容组织&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4、Hugo博客系统是如何工作的&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;5、博客系统的部署&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;6、使用PaperMod主题&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用hugo轻松建立个人博客站点&#34;&gt;使用Hugo轻松建立个人博客站点&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1、 建立站点&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2、 添加文档 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3、 配置站点 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4、 发布站点 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在开始使用Hugo建立站点之前，需要做好两个准备工作：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;安装Hugo&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;下载&lt;code&gt;hugo&lt;/code&gt;&lt;/strong&gt;。在&lt;code&gt;github.com&lt;/code&gt;上下载&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/latest&#34;&gt;&lt;code&gt;hugo&lt;/code&gt;&lt;/a&gt; 的对应操作系统版本，选择the extended  editions 就可以了。至于&lt;code&gt;extended/deploy&lt;/code&gt;   editions多了发布到知名网站的功能：&lt;code&gt;Deploy your site directly to a Google Cloud Storage bucket, an AWS S3 bucket, or an Azure Storage container. &lt;/code&gt;我这里最后发布到&lt;code&gt;github&lt;/code&gt;,所以就不需要下载扩展/发布的版本了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;安装&lt;code&gt;hugo&lt;/code&gt;&lt;/strong&gt;。我这里使用的Windows平台，下载的&lt;code&gt;hugo&lt;/code&gt;是一个单独的可执行文件，不需安装，只需把这个文件放置在自己指定的目录，然后把可执行文件所在目录的路径添加在&lt;code&gt;path&lt;/code&gt;环境变量里，添加在用户环境变量或者系统环境变量都是可以的。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;测试&lt;code&gt;hugo&lt;/code&gt;&lt;/strong&gt;。在git 还没有安装时，无法使用&lt;code&gt;git  bash&lt;/code&gt;命令行终端，可以在&lt;code&gt;Windwos&lt;/code&gt;自带的&lt;code&gt;CMD&lt;/code&gt;命令行窗口使用&lt;code&gt;hugo  version&lt;/code&gt;，能正常显示&lt;code&gt;hugo&lt;/code&gt;版本号就说明安装好了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;安装Git&lt;/p&gt;&#xA;&lt;p&gt;到&lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;git官网&lt;/a&gt;下载对应操作系统版本的git安装就好。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;建立站点&#34;&gt;建立站点&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo  new  site  site-name  --format   yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;  site-name   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git   init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#如果没有带--format  yaml参数，默认生成的是hugo.toml参数，变量和数值之间使用等号`=`，而不是冒号`:`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;theme: &amp;#39;ananke&amp;#39;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; hugo.yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo  server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;新建文档&#34;&gt;新建文档&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo  new content  content/posts/learnhugo.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#等采用了branch  bundle和leaf bundle的方式组织站点目录之后，就可以使用下面的写法新建文档&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo  new   posts/technology/learnhugo/index.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里使用最简单的默认文档模版。新建文档的模版保存在博客站点根目录下的&lt;code&gt;archetypes&lt;/code&gt;目录下，新建站点的archetype目录下只有一个default.md文档，这个文档作为新建文档的front matter模版，保持最简单的title、date、draft三个文档元数据，对hugo越来越熟悉之后，就可以在archetypes目录下新建posts.md文件,添加一些类似category、tag、thumbnail、description等更加丰富的front matter元数据。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
