<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology on 技术博客</title>
    <link>http://localhost:1313/categories/technology/</link>
    <description>Recent content in Technology on 技术博客</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 30 Jul 2025 14:18:10 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/technology/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo博客迁移重新部署</title>
      <link>http://localhost:1313/posts/2025/hugo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 30 Jul 2025 14:18:10 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025/hugo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2/</guid>
      <description>&lt;h2 id=&#34;原有hugo博客项目迁移后重新部署&#34;&gt;原有Hugo博客项目迁移后重新部署&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1、git cone  git@github.com:username/username.github.io.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2、删除username.github.io仓库&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3、新建空仓username.github.io&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4、设置GitHub Pages。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;5、博客目录和内容更新完成后，从本地推送到username.github.io，利用workflow目录下的deploy.yml自动化部署脚本完整站点发布&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用git--clone--备份usernamegithubio仓库&#34;&gt;使用git  clone  备份username.github.io仓库&lt;/h3&gt;&#xA;&lt;p&gt;使用git  cloe   把当前的username.github.io仓库内容下载到本地，然后删除username.github.io仓库&lt;/p&gt;&#xA;&lt;p&gt;我现有的博客站点从旧内容迁移到新的主题，先做好备份，然后再删除。如果是全新的博客项目，就不需要第一、二步骤，直接进入第三步骤。&lt;/p&gt;&#xA;&lt;h3 id=&#34;删除usernamegithubio仓库&#34;&gt;删除username.github.io仓库&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;选择username.github.io仓库的settings，在页面的最下面选择删除仓库&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;**Delete this repository**.      `Once you delete a repository, there is no going back. Please be certain.    `&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;新建一个usernamegithubio空仓&#34;&gt;新建一个username.github.io空仓&lt;/h3&gt;&#xA;&lt;p&gt;点击github下的账号名称，点击Repositories,再点击右侧的&lt;code&gt;New &lt;/code&gt;，弹出新建仓库界面。输入仓库名称为username.github.io,下面的仓库类型选择public,剩下的几个选项none,不要选择&lt;code&gt;Add a Readme  file&lt;/code&gt;，总之，这些项目保持默认就好。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/NewRepository.png&#34; alt=&#34;新建仓库&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/CreateRepository.png&#34; alt=&#34;新建仓库&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;设置usernamegithubio仓库的github-pages参数&#34;&gt;设置username.github.io仓库的GitHub Pages参数&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;选择仓库的settings，再选择pages进入GitHub Pages页面&lt;/li&gt;&#xA;&lt;li&gt;build and deployment的source选择为 deploy from branch ,branch 选项选择gh-pages，路径选择根目录&amp;rsquo;/&amp;rsquo;，点击保存。&lt;/li&gt;&#xA;&lt;li&gt;如果设置有自定义域名，要设置下面的Custom domain。我这里暂时没设置，以后尝试设置，自己当时买了自定义的域名的，而且还用过一年&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;对现有的博客系统内容更新后重新部署到usernamegithubio&#34;&gt;对现有的博客系统内容更新后重新部署到username.github.io&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git  add .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git  commit -m  &amp;#34;udpate&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#push an existing repository from the command line&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin git@github.com:lsgxs/lsgxs.github.io.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -M main&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin main&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果是 Hugo 项目，需要注意GitHub Pages 默认部署的是 静态文件（public/ 目录），而不是 Hugo 源码。所以有两种选择：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
